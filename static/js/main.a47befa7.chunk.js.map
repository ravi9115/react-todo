{"version":3,"sources":["reducers/tasks.js","reducers/searchItem.js","reducers/index.js","components/addTodo.js","actions/index.js","components/searchTodos.js","components/clearTodos.js","components/listTodos.js","App.js","index.js","localStorage.js","OS.svg"],"names":["tasks","state","arguments","length","undefined","action","type","concat","Object","toConsumableArray","text","id","status","filter","item","arr1","i","arr","JSON","parse","objIndex","findIndex","obj","toggledStatus","updatedObj","objectSpread","slice","searchItem","combineReducers","connect","dispatch","addItem","value","_ref","addInput","handleClick","trim","alert","Math","floor","random","react_default","a","createElement","Fragment","className","placeholder","ref","onKeyPress","target","charCode","onClick","onChange","input","clearList","Task","_ref2","task","removeItem","toggleItem","data-id","stringify","width","Checkbox_default","icon","CheckBoxOutlineBlank_default","checkedIcon","CheckBox_default","checked","console","log","color","DragIndicator_default","sortTable","_ref3","taskList","toLowerCase","search","filterItems","map","listTodos_Task","key","lib_default","tag","options","handle","animation","preventOnFilter","draggable","order","sortable","evt","App","src","OS","alt","addTodo","searchTodos","listTodos","clearTodos","Component","persistedState","serializedState","localStorage","getItem","err","loadState","store","createStore","reducer","subscribe","throttle","setItem","_unused","saveState","getState","ReactDOM","render","es","src_App_0","document","getElementById","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.a47befa7.chunk.js","sourcesContent":["const tasks = (state = [], action) => {\n\tswitch (action.type) {\n    case 'ADD_ITEM':\n      return [\n        ...state,\n        {\n          text: action.text,\n          id: action.id,\n          status: 'Active'\n        }\n      ]\n    case 'REMOVE_ITEM':\n      return [\n        ...state.filter(item => item.id !== action.id)\n      ]\n    case 'CLEAR_LIST':\n      return []\n    case 'SORT_TABLE':\n      let arr1 = []\n      for (var i = 0; i < action.arr.length; i++) {\n        arr1[i]= JSON.parse(action.arr[i])\n      }\n      return arr1\n    case 'TOGGLE_ITEM':\n      const objIndex = state.findIndex(obj => obj.id === action.id);\n      const toggledStatus = \n        state[objIndex].status === 'Active' ? 'Completed' : 'Active'\n      const updatedObj = { ...state[objIndex], status: toggledStatus} \n      return [\n        ...state.slice(0,objIndex),\n        updatedObj,\n        ...state.slice(objIndex+1),\n      ]\n    default:\n      return state\n\t}\n}\n\nexport default tasks;\n","const searchItem = (state = '', action) => {\n\tswitch (action.type) {\n    case 'SEARCH_ITEM':\n      if (!action.text) {\n        return ''\n      }\n      return action.text\n    default:\n      return state\n\t}\n}\n\nexport default searchItem;\n","import { combineReducers } from 'redux'\nimport tasks from './tasks'\nimport searchItem from './searchItem'\n\nexport default combineReducers({\n  tasks,\n  searchItem\n})","import React from 'react';\nimport { addItem } from '../actions';\nimport { connect } from 'react-redux';\n\nconst AddButton = ({addItem}) => { \n  let addInput;\n\n  const handleClick = () => {\n    const text = addInput.value.trim();\n    if (!text) {\n      return alert('Empty item!');\n    }\n    const id = Math.floor(Math.random() * 10000);\n    addInput.value = '';\n    return addItem(text, id);\n  };\n\n  const handleKeyPress = (target) => {\n    if(target.charCode === 13){\n      handleClick();\n    }\n  }\n\n  return (\n    <React.Fragment>\n      <input\n        type = \"text\" \n        className = \"input-box\"\n        placeholder = \"Add todo\"\n        ref = { value => addInput = value }\n        onKeyPress = { handleKeyPress }\n      />\n      <button \n        className = \"add-button\"\n        onClick = { handleClick }\n      >\n        Add\n      </button>\n    </React.Fragment>\n  )\n}\n\nconst mapDispatchToProps = dispatch => ({\n  addItem: (value, id) => dispatch(addItem(value, id))\n})\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(AddButton)\n","export const addItem = (text, id) => ({\n  type: 'ADD_ITEM',\n  text, \n  id\n});\n\nexport const removeItem = id => ({\n  type: 'REMOVE_ITEM', \n  id\n});\n\nexport const searchItem = text => ({\n  type: 'SEARCH_ITEM', \n  text\n});\n\nexport const clearList = () => ({\n  type: 'CLEAR_LIST'\n});\n  \nexport const sortTable = arr => ({\n  type: 'SORT_TABLE',\n  arr\n});\n\nexport const toggleItem = id => ({\n  type: 'TOGGLE_ITEM', \n  id\n});\n\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { searchItem } from '../actions';\n\nconst SearchInput = ({searchItem}) => {\n  const handleChange = (input) => {\n    searchItem(input.target.value)\n  }\n    \n  return (\n    <React.Fragment>\n      <input \n        type = \"text\" \n        className = \"search-box\"\n        placeholder = \"Search\"\n        onChange = { handleChange }\n      />\n    </React.Fragment>\n  )\n}\n\nconst mapDispatchToProps = dispatch => ({\n  searchItem: text => dispatch(searchItem(text))\n})\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(SearchInput)\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { clearList } from '../actions';\n\nconst ClearButton = ({clearList}) => {\n  const handleClick = () => {\n    clearList()\n  }\n\n  return (\n    <React.Fragment>\n      <button \n        className = \"clear-button\"\n        onClick = { handleClick }\n      >\n        Remove All\n      </button>\n    </React.Fragment>\n  )\n}\n\nconst mapDispatchToProps = dispatch => ({\n  clearList: () => dispatch(clearList())\n})\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(ClearButton)\n","import './components.css';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Sortable from 'react-sortablejs';\nimport { removeItem, sortTable, toggleItem } from '../actions';\nimport DragIndicator from '@material-ui/icons/DragIndicator';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CheckBoxOutlineBlank from '@material-ui/icons/CheckBoxOutlineBlank';\nimport CheckBox from '@material-ui/icons/CheckBox';\n\n\nconst filterItems = ({tasks, searchItem}) => {\n  if (!searchItem.trim()) {\n    return tasks;\n  }\n  return tasks.filter((item) => \n    item.text.toLowerCase().search(searchItem.toLowerCase()) !== -1\n  )\n}\n\nconst Task = ({task, removeItem, toggleItem}) => {\n  const handleClick = () => {\n    removeItem(task.id)\n  }\n\n  const handleCheckBox = () => {\n    console.log('inside handleCheckBox')\n    toggleItem(task.id)\n  }\n\n  return (\n    <tr data-id={JSON.stringify(task)} className='items'>\n      <td width=\"10%\">\n        <Checkbox\n          icon={<CheckBoxOutlineBlank />} checkedIcon={<CheckBox />} \n          className='root'\n          checked={task.status === 'Completed'? true : false}\n          onChange={ handleCheckBox }\n          color='black'\n        />\n      </td>\n      <td width=\"60%\">\n        {task.text}\n      </td>    \n      <td width=\"20%\">\n        <span onClick={ handleClick }>&#10004;</span>\n      </td>      \n      <td width=\"20%\" className=\"my-handle\">\n        <DragIndicator/>\n      </td>\n    </tr>          \n  )\n}\n\nconst TasksList = ({tasks, searchItem, removeItem, toggleItem, sortTable}) => {  \n  if (!tasks.length) {\n    return (\n      <table width=\"100%\">\n        <tbody>\n          <tr className=\"heading\">\n            <th>\n              Todo list is empty\n            </th>\n          </tr>\n        </tbody>\n      </table>\n    );\n  }\n\n  const taskList = filterItems({tasks, searchItem}).map(item => (\n    <Task \n      key = { item.id }\n      task = { item } \n      removeItem = { removeItem }\n      toggleItem = { toggleItem }\n    />\n  ));\n\n  return !taskList.length ? (\n    <table width=\"100%\">\n      <tbody>\n        <tr>\n          <th className=\"heading\">\n            Not found!\n          </th>\n        </tr>\n      </tbody>\n    </table>\n    ) : (\n    <table width=\"100%\">\n        <Sortable\n          tag=\"tbody\"\n          options={{\n            handle: '.my-handle',\n            animation: 150,\n            filter: \".heading\",\n            preventOnFilter: true,\n            draggable: \".items\",\n            /*onStart: function(evt) {\n              const index = evt.oldIndex;\n              console.log(index)\n            }*/\n          }}\n          onChange={(order, sortable, evt) => {\n            if (searchItem === '') {\n              sortTable(order)\n            }\n          }}\n        >\n          <tr className=\"heading\">\n            <th width=\"10%\">Status</th>\n            <th width=\"50%\">Task</th>\n            <th width=\"20%\">Remove</th>\n            <th width=\"20%\">Move</th>\n          </tr>\n          {taskList}\n        </Sortable>\n    </table>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  tasks: state.tasks,\n  searchItem: state.searchItem\n})\n\nconst mapDispatchToProps = dispatch => ({\n  removeItem: id => dispatch(removeItem(id)),\n  toggleItem: id => dispatch(toggleItem(id)),\n  sortTable: arr => dispatch(sortTable(arr))\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TasksList)\n","import './App.css';\nimport OS from './OS.svg';\nimport React, { Component } from 'react';\nimport AddButton from './components/addTodo';\nimport SearchInput from './components/searchTodos';\nimport ClearButton from './components/clearTodos';\nimport TasksList from './components/listTodos'\n\nclass App extends Component {\n  render() {\n    return (\n      <div className = \"App\">\n        <header className = \"App-header\">\n          <img src={OS} className = \"App-logo\" alt = \"logo\" />\n          <p>\n            Simple To-Do App\n          </p>\n          <div>\n            <AddButton />\n            <SearchInput />\n          </div>\n          <div className=\"box\">\n            <TasksList />\n          </div>\n          <div className=\"clear\">\n            <ClearButton />\n          </div>          \n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from \"redux\";\nimport reducer from \"./reducers\";\nimport './index.css';\nimport App from './App';\nimport {loadState, saveState} from './localStorage';\nimport throttle from 'lodash/throttle';\n\nconst persistedState = loadState();\nconst store = createStore(\n  reducer,\n  persistedState\n);\n\nstore.subscribe(throttle(() => {\n  saveState({\n    tasks: store.getState().tasks\n  });\n}, 1000));\n\nReactDOM.render(\n  <Provider store = {store}>\n    <App />\n  </Provider>, \n  document.getElementById('root')\n);\n\n\n","export const loadState = () => {\n\tconsole.log('inside loadState')\n  try {\n    const serializedState = localStorage.getItem('state');\n    if (serializedState === null) {\n      return undefined;\n    }\n    return JSON.parse(serializedState);\n  } catch (err) {\n    return undefined;\n  }\n};\n\n\nexport const saveState = (state) => {\n\tconsole.log('inside saveState')\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem('state', serializedState);\n  } catch {\n    // ignore write errors\n  }\n};","module.exports = __webpack_public_path__ + \"static/media/OS.759976af.svg\";"],"sourceRoot":""}